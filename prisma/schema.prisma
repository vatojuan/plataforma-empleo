generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LegalDocument {
  id           Int      @id @default(autoincrement())
  url          String
  createdAt    DateTime @default(now())
  userId       Int
  originalName String?
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmployeeDocument {
  id           Int      @id @default(autoincrement())
  url          String
  createdAt    DateTime @default(now())
  userId       Int
  originalName String?
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Application {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  jobId     Int
  userId    Int
  job       Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  createdAt    DateTime      @default(now())
  userId       Int
  applications Application[]
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  name              String
  password          String?
  role              String?
  confirmed         Boolean            @default(false)
  createdAt         DateTime           @default(now())
  googleId          String?
  companyName       String?
  description       String?
  phone             String?
  profilePicture    String?
  cvUrl             String?
  applications      Application[]
  employeeDocuments EmployeeDocument[]
  jobs              Job[]
  legalDocuments    LegalDocument[]
}
